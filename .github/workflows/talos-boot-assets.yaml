---
name: Talos Boot Assets Generation

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch: { }

env:
  REGISTRY: ghcr.io

jobs:
  check-for-new-release:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest Talos release version
        id: talos-release
        run: |
          talos_release_tag=$(curl -sL https://api.github.com/repos/siderolabs/talos/releases/latest | jq -r ".tag_name")
          echo "talos_release_tag=$talos_release_tag" >> $GITHUB_OUTPUT

      - name: Fetch latest Boot Asset release version
        id: boot-asset-release
        run: |
          boot_assets_release_tag=$(curl -sL https://api.github.com/repos/justingarfield/talos-boot-assets/releases/latest | jq -r ".tag_name")
          echo "boot_assets_release_tag=$boot_assets_release_tag" >> $GITHUB_OUTPUT

      # Still need to decide if I want to download and expand the Release Asset instead for more stability
      - name: Compare release versions
        if: steps.talos-release.outputs.talos_release_tag != steps.boot-asset-release.outputs.boot_assets_release_tag
        id: compare-releases
        run: |
          curl https://raw.githubusercontent.com/Ariel-Rodriguez/sh-semversion-2/main/semver2.sh -o /tmp/semver2.sh
          chmod +x /tmp/semver2.sh
          compare_result=$(/tmp/semver2.sh \
            ${{ steps.talos-release.outputs.talos_release_tag }} \
            ${{ steps.boot-asset-release.outputs.boot_assets_release_tag }})
          echo -------------------
          echo $compare_result
          echo -------------------
          echo "compare_result=$compare_result" >> $GITHUB_OUTPUT
    outputs:
      newTalosReleaseFound: ${{ steps.compare-releases.outputs.compare_result }}
      talosReleaseTag: ${{ steps.talos-release.outputs.talos_release_tag }}

  build-boot-assets:
    needs: [ check-for-new-release ]
    if: needs.check-for-new-release.outputs.newTalosReleaseFound
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: ghcr.io/siderolabs/imager:v1.5.1
      options: --privileged
      volumes:
        - /dev:/dev
    steps:
      - name: Build installer w/ DRBD and Intel UCode
        run: |
          /bin/imager installer \
            --arch amd64 \
            --system-extension-image ghcr.io/siderolabs/intel-ucode:20230808@sha256:f08b0d4d7f745419ddc9c79220788243940fb1a1a61638065fa4d137b9dcead2 \
            --system-extension-image ghcr.io/siderolabs/drbd:9.2.4-v1.5.1@sha256:70cf04c14847c21b40024c82c88623337514b70f6946913a4273b61432c78cf2

      - name: Build metal w/ DRBD for rpi_generic
        run: |
          /bin/imager metal \
            --arch arm64 \
            --board rpi_generic \
            --system-extension-image ghcr.io/siderolabs/drbd:9.2.4-v1.5.1@sha256:70cf04c14847c21b40024c82c88623337514b70f6946913a4273b61432c78cf2

      - name: Upload installer artifact
        uses: actions/upload-artifact@v3
        with:
          name: talos-installer
          path: /out/metal-amd64-installer.tar
          if-no-files-found: error
          retention-days: 1

      - name: Upload metal_rpi_generic artifact
        uses: actions/upload-artifact@v3
        with:
          name: talos-rpi_generic
          path: /out/metal-rpi_generic-arm64.raw.xz
          if-no-files-found: error
          retention-days: 1

  create-release:
    needs: [ check-for-new-release, build-boot-assets ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build asset images
        uses: actions/download-artifact@v3
        with:
          name: talos-rpi_generic
          path: /tmp/talos-build-assets

      - name: Create a new release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-for-new-release.outputs.talosReleaseTag }}
          body: Talos release ${{ needs.check-for-new-release.outputs.talosReleaseTag }}
          files: |
            /tmp/talos-build-assets/metal-rpi_generic-arm64.raw.xz

  push-container-image:
    needs: [ check-for-new-release, build-boot-assets ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download build asset images
        uses: actions/download-artifact@v3
        with:
          name: talos-installer
          path: /tmp/talos-build-assets

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.10.0
        with:
          version: v0.11.2
          driver-opts: image=moby/buildkit:v0.12.0

      - name: Log in to the Container registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: imjasonh/setup-crane@v0.3
      - name: Crane push installer
        run: |
          crane push /tmp/talos-build-assets/metal-amd64-installer.tar ${{ env.REGISTRY }}/justingarfield/metal-amd64-installer:${{ needs.check-for-new-release.outputs.talosReleaseTag }}
